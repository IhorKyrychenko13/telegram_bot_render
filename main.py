import os
import telebot
import google.generativeai as genai
from flask import Flask, request
from dotenv import load_dotenv

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
WEBHOOK_URL    = os.getenv("WEBHOOK_URL")

if not all([TELEGRAM_TOKEN, GEMINI_API_KEY, WEBHOOK_URL]):
    raise ValueError("–ù–µ –∑–∞–¥–∞–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel("models/gemini-1.5-flash-latest")

# Flask app
app = Flask(__name__)

@app.route(f"/{TELEGRAM_TOKEN}", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return "OK", 200

@bot.message_handler(func=lambda message: True, content_types=['text'])
def handle_message(message):
    text = message.text.strip()
    lower_text = text.lower()

    # –≠–≤—Ä–∏—Å—Ç–∏–∫–∞: —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∫–ª–∞–º—ã –∏ –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–≥–æ
    if len(text) > 700:
        return
    if sum(text.count(e) for e in "üåûüå≤üè°üçΩüé®üë´üë©‚Äçüè´‚úÖ‚ùåüìåüìû") >= 4:
        return
    if not any(lower_text.startswith(q) for q in ["–∫–∞–∫", "—á—Ç–æ", "–ø–æ—á–µ–º—É", "–∑–∞—á–µ–º", "–≥–¥–µ", "–º–æ–∂–Ω–æ –ª–∏", "–∫—Ç–æ", "–µ—Å—Ç—å –ª–∏"]) and "?" not in lower_text:
        return

    bot.send_chat_action(message.chat.id, 'typing')

    prompt = (
        f"–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∂–∏–∑–Ω–∏ –≤ –ù–∏–¥–µ—Ä–ª–∞–Ω–¥–∞—Ö –∏ –ø–æ–º–æ–≥–∞–µ—à—å –ª—é–¥—è–º –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö.\n"
        f"–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\"{text}\"\n\n"
        f"–ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —Ä–µ–∫–ª–∞–º–∞, —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –æ–±—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ ‚Äî –Ω–µ –æ—Ç–≤–µ—á–∞–π.\n"
        f"–ï—Å–ª–∏ —ç—Ç–æ –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º ‚Äî –æ—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è).\n"
        f"–ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω, –ª—É—á—à–µ –ø—Ä–æ–º–æ–ª—á–∏."
    )

    try:
        response = model.generate_content(prompt)
        reply = response.text.strip()

        if reply:
            bot.reply_to(message, reply)

    except Exception as e:
        print("–û—à–∏–±–∫–∞ Gemini:", e)
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ Gemini API.")

def start_webhook():
    bot.remove_webhook()
    bot.set_webhook(f"{WEBHOOK_URL}/{TELEGRAM_TOKEN}")
    print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: {WEBHOOK_URL}/{TELEGRAM_TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

if __name__ == "__main__":
    start_webhook()
